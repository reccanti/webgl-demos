(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{"+7Nl":function(e,n){e.exports='const glsl = x => x;\n\nconst vertShaderSource = glsl`\n    attribute vec4 a_position;\n\n    void main() {\n        gl_Position = a_position;\n    }\n`;\n\nconst fragShaderSource = glsl`\n    precision mediump float;\n\n    void main() {\n        gl_FragColor = vec4(1, 0, 0.5, 1);\n    }\n`;\n\nfunction createShader(gl, type, source) {\n    const shader = gl.createShader(type);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    const success = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n    if (success) {\n        return shader;\n    }\n    console.error(gl.getShaderInfoLog(shader));\n    gl.deleteShader(shader);\n}\n\nfunction createProgram(gl, vertShader, fragShader) {\n    const program = gl.createProgram();\n    gl.attachShader(program, vertShader);\n    gl.attachShader(program, fragShader);\n    gl.linkProgram(program);\n    const success = gl.getProgramParameter(program, gl.LINK_STATUS);\n    if (success) {\n        return program;\n    }\n    console.error(gl.getProgramInfoLog(program));\n    gl.deleteProgram(program);\n}\n\nexport default function makeDemo(canvas, gl) {\n\n    console.log(gl);\n    console.log(canvas);\n    // INITIALIZATION CODE \n\n    // create the program \n    const vertShader = createShader(gl, gl.VERTEX_SHADER, vertShaderSource);\n    const fragShader = createShader(gl, gl.FRAGMENT_SHADER, fragShaderSource);\n    const program = createProgram(gl, vertShader, fragShader);\n\n    // get the location of attributes\n    const positionAttributeLocation = gl.getAttribLocation(program, "a_position");\n\n    // create buffers\n    const positionBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n\n    // bind data to the buffer\n    // prettier-ignore\n    const positions = [\n        0, 0,\n        0, 0.5,\n        0.7, 0\n    ];\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(positions), gl.STATIC_DRAW);\n\n    // RENDERING CODE\n\n    // convert from clip-space to pixels\n    canvas.width = canvas.clientWidth;\n    canvas.height = canvas.clientHeight;\n    gl.viewport(0, 0, canvas.width, canvas.height);\n\n    // clear the canvas\n    gl.clearColor(0, 0, 0, 0);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n\n    // use the program\n    gl.useProgram(program);\n\n    // turn on the attribute\n    gl.enableVertexAttribArray(positionAttributeLocation);\n\n    // tell the attribute how to get data out of the position buffer\n    (() => {\n        const size = 2;\n        const type = gl.FLOAT;\n        const normalize = false;\n        const stride = 0;\n        const offset = 0;\n        gl.vertexAttribPointer(positionAttributeLocation, size, type, normalize, stride, offset);\n    })();\n\n    // draw the data in the buffer\n    (() => {\n        const primitiveType = gl.TRIANGLES;\n        const offset = 0;\n        const count = 3;\n        gl.drawArrays(primitiveType, offset, count);\n    })()\n}'},"2Eek":function(e,n,t){e.exports=t("W7oM")},"4bdI":function(e,n,t){t("Ui4e"),e.exports=t("WEpk").Object.freeze},"7KY3":function(e,n,t){"use strict";t.r(n);var r=t("q1tI"),a=t.n(r),o=t("0iUn"),i=t("sLSF"),c=t("MI3g"),s=t("a7VT"),l=t("AT/M"),u=t("Tit0"),g=t("hfKm"),d=t.n(g);function f(e,n,t){return n in e?d()(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}var h=function(e){function n(e){var t;return Object(o.default)(this,n),t=Object(c.default)(this,Object(s.default)(n).call(this,e)),f(Object(l.default)(t),"canvasRef",void 0),f(Object(l.default)(t),"state",{width:300,height:240}),f(Object(l.default)(t),"updateCanvasDimensions",function(){t.setState({width:t.canvasRef.current.clientWidth,height:t.canvasRef.current.clientHeight})}),t.canvasRef=a.a.createRef(),t}return Object(u.default)(n,e),Object(i.default)(n,[{key:"componentDidMount",value:function(){this.updateCanvasDimensions(),this.props.getCanvas(this.canvasRef.current)}},{key:"shouldComponentUpdate",value:function(e){return this.props.getCanvas!==e.getCanvas}},{key:"componentDidUpdate",value:function(){console.log("updating")}},{key:"render",value:function(){return a.a.createElement(a.a.Fragment,null,a.a.createElement("canvas",{className:"width-100 height-100",width:this.state.width,height:this.state.height,ref:this.canvasRef},"Sorry, your browser does not support the canvas element."))}}]),n}(a.a.Component),m=t("2Eek"),p=t.n(m),v=t("FbiP"),b=t.n(v);function S(e,n){return n||(n=e.slice(0)),b()(p()(e,{raw:{value:b()(n)}}))}function A(){var e=S(["\n    precision mediump float;\n\n    void main() {\n        gl_FragColor = vec4(1, 0, 0.5, 1);\n    }\n"]);return A=function(){return e},e}function E(){var e=S(["\n    attribute vec4 a_position;\n\n    void main() {\n        gl_Position = a_position;\n    }\n"]);return E=function(){return e},e}var w=function(e){return e},R=w(E()),_=w(A());function T(e,n,t){var r=e.createShader(n);if(e.shaderSource(r,t),e.compileShader(r),e.getShaderParameter(r,e.COMPILE_STATUS))return r;console.error(e.getShaderInfoLog(r)),e.deleteShader(r)}function P(e,n){console.log(n),console.log(e);var t=T(n,n.VERTEX_SHADER,R),r=T(n,n.FRAGMENT_SHADER,_),a=function(e,n,t){var r=e.createProgram();if(e.attachShader(r,n),e.attachShader(r,t),e.linkProgram(r),e.getProgramParameter(r,e.LINK_STATUS))return r;console.error(e.getProgramInfoLog(r)),e.deleteProgram(r)}(n,t,r),o=n.getAttribLocation(a,"a_position"),i=n.createBuffer();n.bindBuffer(n.ARRAY_BUFFER,i);var c,s;n.bufferData(n.ARRAY_BUFFER,new Float32Array([0,0,0,.5,.7,0]),n.STATIC_DRAW),e.width=e.clientWidth,e.height=e.clientHeight,n.viewport(0,0,e.width,e.height),n.clearColor(0,0,0,0),n.clear(n.COLOR_BUFFER_BIT),n.useProgram(a),n.enableVertexAttribArray(o),c=n.FLOAT,n.vertexAttribPointer(o,2,c,!1,0,0),s=n.TRIANGLES,n.drawArrays(s,0,3)}var O=t("+7Nl"),F=function(e){function n(e){var t;return Object(o.default)(this,n),t=Object(c.default)(this,Object(s.default)(n).call(this,e)),f(Object(l.default)(t),"canvas",void 0),t.canvasRef=a.a.createRef(),t}return Object(u.default)(n,e),Object(i.default)(n,[{key:"componentDidMount",value:function(){var e=this.canvas.getContext("webgl");P(this.canvas,e)}},{key:"render",value:function(){var e=this;return a.a.createElement("div",{className:"grid grid-col-8 grid-row-fill width-100 height-100"},a.a.createElement("div",{className:"grid-col-1-9 grid-row-1-2"},a.a.createElement(h,{getCanvas:function(n){return e.canvas=n}})),a.a.createElement("div",{className:"grid-col-4-9 grid-row-1-2 z-1000 overflow-scroll"},a.a.createElement("div",{className:"margin-1 "},a.a.createElement("p",null,"This is the minimum amount of code needed to render a triangle in WebGL, based on the demo from ",a.a.createElement("a",{href:"https://webglfundamentals.org/webgl/lessons/webgl-fundamentals.html"},"WebGL Fundamentals"),"."),a.a.createElement("p",null,a.a.createElement("h2",null,"Source"),a.a.createElement("pre",null,O)))))}}]),n}(a.a.Component);n.default=function(){return a.a.createElement(F,null)}},"9V4/":function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/demos/01-basic-triangle",function(){var e=t("7KY3");return{page:e.default||e}}])},FbiP:function(e,n,t){e.exports=t("4bdI")},Ui4e:function(e,n,t){var r=t("93I4"),a=t("6/1s").onFreeze;t("zn7N")("freeze",function(e){return function(n){return e&&r(n)?e(a(n)):n}})},W7oM:function(e,n,t){t("nZgG");var r=t("WEpk").Object;e.exports=function(e,n){return r.defineProperties(e,n)}},nZgG:function(e,n,t){var r=t("Y7ZC");r(r.S+r.F*!t("jmDH"),"Object",{defineProperties:t("fpC5")})}},[["9V4/",1,0]]]);